import { Animated, ImageBackground, StyleSheet, useWindowDimensions, View } from 'react-native';
import React from 'react';
export const AnimatedHeader = _ref => {
  let {
    HeaderComponent,
    headerImage,
    imageHeight,
    translateYUp,
    translateYDown,
    scale,
    imageStyle
  } = _ref;
  const {
    width
  } = useWindowDimensions();
  const AnimatedImageBackground = Animated.createAnimatedComponent(ImageBackground);
  return /*#__PURE__*/React.createElement(View, {
    style: [styles.imgContainer, {
      marginTop: -imageHeight * 4,
      paddingTop: imageHeight * 4
    }]
  }, HeaderComponent ? /*#__PURE__*/React.createElement(React.Fragment, null, headerImage ? /*#__PURE__*/React.createElement(AnimatedImageBackground, {
    source: headerImage,
    style: [{
      height: imageHeight,
      width: width * 1.2
    }, {
      transform: [{
        scale: scale
      }, {
        translateY: translateYUp
      }, {
        translateY: translateYDown
      }]
    }, imageStyle]
  }, HeaderComponent) : /*#__PURE__*/React.createElement(Animated.View, {
    style: [{
      height: imageHeight,
      width: width * 1.2
    }, {
      transform: [{
        scale
      }, {
        translateY: translateYUp
      }, {
        translateY: translateYDown
      }]
    }]
  }, HeaderComponent)) : /*#__PURE__*/React.createElement(Animated.Image, {
    source: headerImage,
    style: [{
      height: imageHeight,
      width: width * 1.2
    }, {
      transform: [{
        scale
      }, {
        translateY: translateYUp
      }, {
        translateY: translateYDown
      }]
    }, imageStyle]
  }));
};
const styles = StyleSheet.create({
  imgContainer: {
    alignItems: 'center',
    overflow: 'hidden'
  }
});
//# sourceMappingURL=AnimatedHeader.js.map